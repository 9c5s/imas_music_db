---
# アイマス楽曲データベース - スプレッドシート設定ファイル
# このファイルは、Googleスプレッドシートからの楽曲データ取得に関する設定を管理する

# === スプレッドシート基本設定 ===
spreadsheet:
  # コピー元のスプレッドシートID
  # Google スプレッドシートのURLから取得できるID部分を指定する
  # 例: https://docs.google.com/spreadsheets/d/{このID部分}/edit
  source_id: "14Q2A-eeXVDI_Qdb_z_Jwr5IwerDsr5kfRTzRw1J1z18"
  
  # 読み取り対象のシート（タブ）の名前
  # スプレッドシート内の特定のタブを指定する
  # "#非表示_初出" は楽曲の初出情報を管理するシート
  target_sheet: "#非表示_初出"

# === 出力設定 ===
output:
  # 出力するJSONファイル名
  # 処理結果として生成されるJSONファイルの名前を指定する
  filename: "imas_music_db.json"

# === データ構造設定 ===
data_structure:
  # データが始まる行番号（1-based）
  # スプレッドシートでヘッダー行を除き、実際のデータが始まる行を指定する
  # 通常、1行目がタイトル、2行目がヘッダー、3行目からデータ開始
  data_start_row: 3
  
  # データ終端を判定する列の範囲
  # 指定された列範囲がすべて空の場合、データ終端と判定する
  # A列からO列の範囲で空行をチェックする
  end_check_columns:
    start: "A"
    end: "O"

# === 列マッピング設定 ===
# スプレッドシートの列文字とJSONキーの対応関係を定義する
# is_arrayフラグがtrueの場合、カンマ区切りの値を配列として処理する
column_mapping:
  # B列: 楽曲の一意識別子
  B:
    key: "ID"
    is_array: false
    description: "楽曲の一意識別番号（数値）"
  
  # C列: 楽曲名
  C:
    key: "曲名"
    is_array: false
    description: "楽曲の正式名称"
  
  # D列: 読み方
  D:
    key: "よみがな"
    is_array: false
    description: "楽曲名の読み方（ひらがな・カタカナ）"
  
  # E列: CD題名
  E:
    key: "CD題"
    is_array: false
    description: "収録されているCDのタイトル"
  
  # F列: 作詞者（複数の場合はカンマ区切り）
  F:
    key: "作詞"
    is_array: true
    description: "楽曲の作詞者（複数の場合は配列として処理）"
  
  # G列: 作曲者（複数の場合はカンマ区切り）
  G:
    key: "作曲"
    is_array: true
    description: "楽曲の作曲者（複数の場合は配列として処理）"
  
  # H列: 編曲者（複数の場合はカンマ区切り）
  H:
    key: "編曲"
    is_array: true
    description: "楽曲の編曲者（複数の場合は配列として処理）"
  
  # I列: ブランド・シリーズ（複数の場合はカンマ区切り）
  I:
    key: "ブランド"
    is_array: true
    description: "楽曲が属するブランドやシリーズ（アイマス、デレマス等）"
  
  # J列: 楽曲の時間
  J:
    key: "時間"
    is_array: false
    description: "楽曲の再生時間（分:秒形式）"
  
  # K列: 歌唱者情報（特殊処理対象）
  K:
    key: "歌唱"
    is_array: true
    description: "楽曲の歌唱者・ユニット（特殊形式で解析される）"
  
  # L列: 歌唱者情報（K列と統合）
  # 注意: K列とL列は共に"歌唱"キーにマッピングされ、
  # 処理時に統合される仕様となっている
  L:
    key: "歌唱"
    is_array: true
    description: "楽曲の歌唱者・ユニット（K列と統合処理される）"
  
  # M列: CD品番
  M:
    key: "CD品番"
    is_array: false
    description: "CDの商品識別番号（JANコード等）"
  
  # N列: CD名
  N:
    key: "CD名"
    is_array: false
    description: "CDの正式な商品名"
  
  # O列: 発売日
  O:
    key: "発売日"
    is_array: false
    description: "CDの発売日（YYYY/MM/DD形式）"

# === 特殊処理設定 ===
# 空文字として扱う値のリスト
# これらの値が入力されている場合、空文字として処理される
ignore_values:
  - "#不明"     # 情報が不明な場合の標記
  - "未定"      # 情報が未定の場合の標記
  - "#未定"     # 情報が未定の場合の標記（#付き）

# === 処理ロジック説明 ===
# 
# 歌唱列の特殊処理について:
# - "ユニット名[メンバー1,メンバー2]" 形式の場合、ユニット名とメンバー名を分離
# - カンマ区切りで複数の歌唱者を配列として処理
# - []内のメンバー名もカンマ区切りで分離
# 
# ブランド列の特殊処理について:
# - "越境"キーワードを含む場合、コロン区切りで分割し、"越境"を除外
# 
# データソート:
# - 処理完了後、ID列の値で降順ソートを実行
# - IDが数値でない場合は0として扱う